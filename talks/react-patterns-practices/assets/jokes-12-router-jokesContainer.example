import React from 'react';
import Joke from './Joke';
import {connect} from 'react-redux';
import {getJoke, getCount} from './reducers';
import * as actions from './actions';
import {withRouter} from 'react-router';

class JokesContainer extends React.Component {
  constructor() {
    super();
    this.keyDownHandler =
      this.handleKeyDown.bind(this);
  }
  componentWillMount() {
    this.props.fetchJokes();
  }
  componentDidMount() {
    document.addEventListener(
      'keydown', this.keyDownHandler
    );
  }
  componentWillUnmount() {
    document.removeEventListener(
      'keydown', this.keyDownHandler
    );
  }
  handleKeyDown(e) {
    const {
      decrement, increment, history
    } = this.props;
    if (e.which === 37) {
      decrement(history);
    } else if (e.which === 39) {
      increment(history, index);
    }
  }
  render() {
    return (
      <section>
        <Joke {...this.props} />
      </section>
    );
  }
}

const mapStateToProps = (state, {match}) => {
  const { index = 0 } = match.params;
  return {
    joke: getJoke(state, index),
    count: getCount(state),
    index: parseInt(index),
  };
};

JokesContainer = withRouter(
  connect(
    mapStateToProps, actions
  )(JokesContainer)
);

export default JokesContainer;
