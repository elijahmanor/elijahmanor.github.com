import React from 'react';
import Joke from './Joke';
import { connect } from 'react-redux';
import { getJoke, getCount } from './reducers';
import * as actions from './actions';
import { Redirect, withRouter } from 'react-router';

class JokesContainer extends React.Component {
  componentWillMount() {
    this.props.fetchJokes();
  }
  componentDidMount() {
    this.keyDownHandler = this.handleKeyDown.bind(this);
    document.addEventListener('keydown', this.keyDownHandler);
  }
  componentWillUnmount() {
    document.removeEventListener('keydown', this.keyDownHandler);
  }
  handleKeyDown(e) {
    const { decrement, increment, history, index } = this.props;
    if (e.which === 37) {
      decrement({ history, index });
    } else if (e.which === 39) {
      increment({ history, index });
    }
  }
  render() {
    console.log('JokesContainer', this.props);
    const { joke = {}, index = 0, count = 0 } = this.props;

    return (
      <section>
        <Joke joke={joke} index={index} count={count} />
      </section>
    );
  }
}

const mapStateToProps = (state, { match }) => {
  const { index = 0 } = match.params;
  return {
    joke: getJoke(state, index),
    count: getCount(state),
    index: parseInt(index),
  };
};

JokesContainer = withRouter(connect(mapStateToProps, actions)(JokesContainer));

export default JokesContainer;
